---
title: "导入导出文件"
---

在之前的两章中，我们详细介绍了**R语言、rtools、Rstudio以及R包的安装**，解决新手最先碰到的两大难题！

接下来大家就面临把数据读入R语言、把数据另存为其他格式的问题！

大家在日常生活中遇到的最多的数据应该还是Excel数据，但是对于R语言来说，我们必须要把外部数据读入到R里面，才能进行各种操作。对于我们最后的数据，可能还需要再保存为excel格式。

这两个问题对于会的人来说非常简单，可以有多种方法可以实现，但是对于新手来说却经常遇到报错。今天**从一个新手的角度说一说R语言的数据读入和另存问题**。

## 把数据读入R语言

### Excel

这个格式太常见了，大家日常生活用的大部分都是这种格式。比如有这么一个excel文件：`brca_clin.xlsx`，它里面的内容是这样的：

![示例excel](figs/PixPin_2024-02-22_14-51-11.png)

现在我们需要把它读入R里面。

我推荐你使用`readxl`包读取Excel文件。首先我们要安装这个R包：

```{r,eval=FALSE}
install.packages("readxl")
```

安装好之后，我们需要加载这个R包才能使用：

```{r}
library(readxl)
```

然后我们就可以读入这个文件了，**读取时，你必须指明你的文件在哪里！** 如果文件路径没写对，就会出现下面这种类似的报错，一般情况下，它会告诉你，你的路径没写对，或者找不到这个文件，这个文件不存在，不能打开连接等等错误！！

```{r,eval=FALSE}
brca_clin <- read_xlsx("E:/brca_clin.xlsx", col_names = T)

Error: `path` does not exist: ‘E:/brca_clin.xlsx’
```

这个时候你就要去确认下，你的这个`brca_clin.xlsx`文件到底在哪里！当你给它正确的路径时，它就不会报错。比如这个示例文件位于**E盘-R文件夹-r-beginners文件夹**中，你写对了就能读进来：

```{r}
brca_clin <- read_xlsx("E:/R/r-beginners/brca_clin.xlsx", col_names = T)

brca_clin
```

这样我们就成功把文件读取到R里面了！

上树代码中的`E:/R/r-beginners/brca_clin.xlsx`这种路径写法被称为**绝对路径**，意思就是从最开始的位置一直往下写，除此之外，还有一种写法是**相对路径**，即从相对于当前路径的位置开始写。

比如，我这段脚本位于**E盘-R文件夹-r-beginners文件夹**中，和`brca_clin.xlsx`这个文件同处于一个文件夹中，那么在读取时也可以这么写：

```{r}
# 也能成功
brca_clin <- read_xlsx("brca_clin.xlsx", col_names = T)
```

如果一个文件位于**E盘-R文件夹-r-beginners文件夹-datasets文件夹**中，那么在读取时就可以这么写：

```{r}
# 加了一个datasets
brca_expr <- read_xlsx("datasets/brca_expr.xlsx", col_names = T)
```

更多的相对路径和绝对路径的知识，大家自己百度下吧。尤其是要学习下：`./`表示当前路径，`../`表示上一级路径。

相对路径写起来更加简单，所以以下示例都会用相对路径进行演示。

除了路径问题，对于新手还有几个点需要注意：

- 注意`/  \  ,  " "`，这些标点一定要在**英文状态下输入**！
- 这个示例文件是有**列名**的，所以在读取的时候加了`col_names=T`这个参数，没有列名就要改成`F`；
- 如果你的数据使用了*合并/拆分单元格、各种格式、公式等*，会报错！复杂的表头在读取时很复杂，建议大家初学时都整理成示例这种简单的表头；
- 这个文件是`.xlsx`格式的，如果不是，那你需要用其他函数，比如`read_xls()`函数读取`.xls`结尾的文件；
- 如果你读取中文遇到乱码问题，那大概率是遇到了编码问题，这是一个很复杂的问题：
  - 首先你可以通过点击Rstudio中的`Tools`-`Global Options`，到达以下界面，把默认编码方式改为`utf-8`，然后关闭rstudio，重新读取；![utf8编码](figs/PixPin_2024-02-22_14-56-56.png)
  - 有时直接升级R包/R/rstudio/，重新保存文件为utf-8等方式也可以解决问题；
  - 如果都不行，直接百度！具体情况具体分析！
  
### csv

csv文件是一种*逗号分隔文件*，打开后和excel看起来一模一样，你不要问为什么看不到逗号......

![示例csv](figs/PixPin_2024-02-22_14-51-11.png)

*一般推荐把excel文件另存为csv文件，因为方便R语言读取，不需要安装R包也可以读取~*

```{r}
csv <- read.csv("datasets/brca_clin.csv", header = T)

csv
```

或者用`read.table()`函数读取。

```{r}
csv <- read.table("datasets/brca_clin.csv", header = T,
                  sep = "," # 指定分隔符！！
                  )

csv
```

是不是很简单，注意点和excel一样~

### txt

txt文件也是我们常见的文件类型，通常这种数据也是可以直接读取的，不同安装R包。

现在我们有一个这样的txt文件，它看起来不规整，但其实是规整的哦~~，不要被表象迷惑，也**千万不要试图用空格键把它对齐！！**

![txt文件](figs/PixPin_2024-02-22_15-14-36.png)

**txt是`tab`键分隔的文件，在读取时，一定要指定分隔符：**

```{r}
tmp <- read.table("E:/R/r-beginners/datasets/brca_clin.txt",
                  sep = "\t", # 必须要指定分隔符
                  header = T)
tmp
```

### 其他

*如果是spss软件产生的`.sav`文件*，可以使用`foreign`包中的`read.spss()`函数读取，或者使用`haven`包中的`read_sav()`

这两个包在使用前需要先安装哦~

```{r}
# foreign包读取
library(foreign)
spss <- foreign::read.spss("datasets/例03-05.sav",to.data.frame = T)

spss
```

```{r}
# haven包读取
library(haven)
spss <- read_sav("datasets/例03-05.sav")

spss
```

这个例子是比较简单的，有时候需要指定特定的编码方式，可以通过使用`?read_sav/?read.spss`查看更改编码的方式。

`haven`这个包是专门设计用来读取*spss/SAS/STATA*格式的文件的~

*如果是`rdata/Rdata/RData`文件*，这个是R自带的格式，直接`load()`即可，但是要**注意一定要写对文件路径！！** 或者也可以直接双击`rdata/Rdata/RData`文件！

```{r}
load(file = "datasets/brca_example.rdata")
```

*如果是`rds`文件*，这个也是R常用的格式，使用`readRDS()`函数即可，也要**注意文件路径**。

```{r}
tmp <- readRDS(file = "datasets/brca_example.rds") 
```

常见的就是这些，当你掌握这些简单的之后，你可以尝试更加复杂的，以后肯定也会遇到，不过有了这些简单的作为基础，相信你能更快的解决这类问题~

## 写出文件（从R语言另存为其他格式）

写出文件我觉得比读取文件要简单一点，如果你实在不知道怎么保存，有个简便方法，在这个地方：

![一键保存所有](figs/PixPin_2024-02-22_15-21-21.png)

直接点击保存，就会在你当前工作目录产生一个`RData`文件，下次直接`load`或者双击即可快速打开你的所有东西！！！

不太推荐直接保存为excel格式，建议使用csv格式。

如果是想把当前文件保存为csv文件，可以使用以下函数：

```{r,eval=FALSE}
# 把tmp这个数据框保存为csv
write.csv(tmp, # 要保存的对象
          file = "datasets/111.csv", #保存到哪里，保存为什么格式，.csv不要忘记！
          quote = F, # 不加引号
          row.names = F # 行名
          )

write.table(tmp,
            file = "datasets/111.csv", #保存到哪里，保存为什么格式，.csv不要忘记！
            sep = ",",  # 必须指定分隔符！！！
            quote = F, # 不加引号
            row.names = F, # 行名
            col.names = T # 列名
            )
```

如果要保存为或者txt文件，可以使用以下函数：

```{r}
write.table(tmp,
            file = "datasets/222.txt",
            sep = "\t", # 千万别忘记指定分隔符！！
            quote = F, # 不加引号
            row.names = F, # 行名
            col.names = T # 列名
            )
```

如果要保存为`rdata/Rdata/RData`文件，直接用`save()`函数，简单方便，下次直接load即可，还可以同时保存多个对象！！

推荐大家平时保存时选择`rdata/Rdata/RData/rds`，方便，官方！

```{r}
save(tmp,csv, # 同时保存多个对象
     file = "datasets/tmp1.rdata")
```

保存为`rds`格式：

```{r}
saveRDS(tmp, file = "datasets/tmp.rds")
```

以上就是常见的数据读取和写出，最后再说一遍注意点：

- 输入法需要是英文状态下的标点符号！
- 文件路径必须写对！
- 注意不同文件的分隔符！
- 不同文件使用不同函数读取/写出！不要所有的格式都用一个函数！
- 如果碰到不知道的格式读取，直接百度！！99.999%能解决你的问题！

希望大家以后再也不要碰到数据读取问题！
