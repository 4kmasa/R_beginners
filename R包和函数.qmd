---
title: "R包和函数"
format: html
---

## 什么是R包？

R包是别人整理好的工具包，内置各种函数以及帮助文档等信息，可以用来实现特定的功能。比如有些R包是专门用来画热图的，有些R包是专门用来做生存分析的，等。

R包相当于手机里的APP，不同的APP有不同的功能。R语言在安装时会有很多自带的R包（包括`base`、`datasets`、`utils`、`grDevices`、`graphics`、`stats`、`methods`），不需要额外安装，类似于刚买的新手机有很多内置APP。

## R包安装

R包就相当于手机里的各种APP，自带的APP很明显是无法满足日常使用的，所以我们需要自己安装其他APP。同理，R自带的R包也是无法满足我们要求的，所以我们也要自己安装其他R包。

安装R包就类似于给手机安装APP，安装方式有多种。比如：小米手机可以从小米应用商店安装APP，也可以从酷安安装APP，还可以从Google   play安装，还可以从官网下载apk文件到本地安装，等。苹果手机可以从App Store安装，还可以通过巨魔商店安装，也可以本地安装。

R包安装也是有多种方法。主要是4种：

- 从CRAN安装，
- 从bioconductor安装，
- 从github安装，
- 下载安装包本地安装。

随着学习的深入你还会遇见各种安装方法，我列举的这几种是最常见的。

R语言是老外发明的东西，我们要访问老外的东西，由于众所周知的原因，是很困难的。不只是R，其他的东西比如Python、Linux等，都是这样。

所以在安装R包时，我们一定要先修改镜像（mirror）（或者你可以使用魔法，就像你使用Google play需要魔法一样）。镜像可以简单理解为中国人为了方便自己下载安装，把国外的东西完整复制了一份放到国内，而且会随着国外的更新而更新。使用镜像的好处的不需要魔法我们也可以流畅快速地下载安装R包。

一个R包只需要安装一次即可重复使用，R包也可以更新、卸载、重装，这个道理和手机APP简直是一模一样。

以下是4种R包安装方法的详细介绍，这部分我在哔哩哔哩也有相应的视频介绍，点击即可观看：[可能是最好用的R包安装教程](https://www.bilibili.com/video/BV11g411o7be/)

### 从CRAN安装

[CRAN](https://cran.r-project.org/)是一个存储R包的仓库，大多数R包都是存储在这里仓库里的。

要从CRAN安装，我们首先要修改镜像。这个过程在安装好Rstudio之后非常简单，依次点击：`Tools`-`Global Options`：

![](figs/PixPin_2024-02-22_13-36-23.png)

然后按照下图所示依次点击，在列出的中国镜像中任选一个即可（比如我选择了上海交通大学的镜像），选好之后点击`OK`即可。这样就修改好镜像了，下面就可以畅快的安装R包了。

![](figs/PixPin_2024-02-22_13-38-48.png)

比如我们现在现在想要安装`ggplot2`这个R包，使用以下代码即可：

```{r,eval=FALSE}
install.packages("ggplot2")
```

### 从bioconductor安装

医学生/医生学习R语言有相当一部分人是想做生信分析的，绝大多数做生信分析的R包都不在CRAN中，而是存储在[bioconductor](https://bioconductor.org/)中，这个网站是专门存储生物信息学需要使用的R包的。

![](figs/PixPin_2024-02-22_13-50-27.png)

这个仓库也是老外建立维护的，所以要安装这里的R包，自然也是先要更改镜像的。

从bioconductor的[官方镜像列表](https://bioconductor.org/about/mirrors/)中可知，目前中国镜像有以下4个，分别是**清华大学的镜像、南京大学的镜像、中国科学技术大学的镜像、西湖大学的镜像**，如下所示：

![](figs/PixPin_2024-02-22_13-53-57.png)

**每次**在安装bioconductor的R包之前，都要先运行以下代码更换镜像，**任选一个运行**即可：

```r
# 使用清华大学的镜像
options(BioC_mirror="https://mirrors.tuna.tsinghua.edu.cn/bioconductor")

# 使用南京大学的镜像
options(BioC_mirror="https://mirrors.nju.edu.cn/bioconductor/")

# 使用中国科学技术大学的镜像
options(BioC_mirror="https://mirrors.ustc.edu.cn/bioc/")

# 使用西湖大学的镜像
options(BioC_mirror="https://mirrors.westlake.edu.cn/bioconductor")
```

运行外以上代码更改好镜像之后，我们还需要先安装一个bioconductor的R包管理器，使用以下代码：

```{r,eval=FALSE}
if (!require("BiocManager", quietly = TRUE))
    install.packages("BiocManager")
BiocManager::install(version = "3.18")
```

安装好这个包 管理器之后，就可以安装bioconductor的R包了。比如我们要安装一个做差异分析的R包：`limma`，就可以使用以下代码：

```{r,eval=FALSE}
# 每次都要先改镜像
options(BioC_mirror="https://mirrors.tuna.tsinghua.edu.cn/bioconductor")

# 改完镜像再安装
BiocManager::install("limma")
```


### 从github安装



### 本地安装


## 什么是函数？

**函数**（function）是用来实现特定功能的、由别人整理好的一段代码，通常一个R包会包含多个函数。这就好比一个手机APP可以做多个事情，比如微信可以用来文字聊天、视频聊天、查看订阅号消息等，甚至还可以看直播。

一个R包里面有多个函数，这些函数也可以实现不同的功能。比如`graphics`包里面的两个函数：

```{r,fig.asp=1}
plot(1:10,1:10) # 画图
lines(1:10) # 添加一条线
```

这里的`plot()`就是一个函数，可以实现画图功能。当你运行`plot(1:10,1:10)`之后，它会为你开辟一片空间用于画图，然后把这个图的框架（4条框以及坐标等）给你画出来，然后把点也给你画上去，这就是这个函数的功能（当然它还有其他功能）。

当你接着运行`lines(1:10)`之后，它会给你画一条线，这就是`lines()`这个函数的功能。

当我们在使用某个手机APP时，肯定是要先打开这个APP，然后才能使用它，R包也是如此，**一定要先加载R包，才能使用R包里的函数**。

这个`plot()`函数是`graphics`包里面的，这个R包是R语言自带的（有些自带的不需要加载也能使用），不需要额外安装，使用时也不需要加载（即不需要先`library(graphics)`），**自己安装的R包是需要先加载才能使用里面的函数的**。

比如`ggplot()`函数是属于`ggplot2`这个R包的，这个R包是需要自己安装的，所以在使用前需要先加载才能使用：

```{r}
# 先加载对应的R包
library(ggplot2)

# 才能使用里面的函数
ggplot()
```

每个函数都有特定的**参数**（argument），而且这些参数是有要求的，不按照规定写就会报错。

比如有的参数需要你提供数值型的向量给它，如果你提供的不是数值型向量，那么它就会报错；有的参数不能有`NA`或者缺失值，如果你提供的数据里有`NA`或者缺失值，那么它肯定会报错。这个东西是很机械的，不可更改，不按照要求写必然报错！

如何知道每个参数的具体要求及函数的使用方法呢？我们可以直接查看帮助文档。帮助文档是函数的开发者按照一定的要求写的、能够让使用者快速理解函数用法的文档。

绝大多数R语言中的函数都可以通过`?xxx`或者`help(xxx)`查看函数的帮助文档（自己安装的R包需要先加载），比如：

```{r}
# 以下两种方法都可以
?lines

# 或者
help("lines")
```

当你运行上面的代码后，在Rstudio右侧`help`面板中会出现该函数的帮助文档，如下图所示：

![](figs/PixPin_2024-01-23_10-22-45.png)

帮助文档是学习函数用法的最好方法，这也是你以后最常用的学习方法（当然有些帮助文档写的很烂）。

在这个帮助文档中，首先是`Description`，这部分会简要的告诉你这个函数是干啥的，比如这个函数的描述告诉你，这个函数可以使用不同方式给出的坐标，并把点连接成线。

下面是`Usage`，这部分主要是展示这个函数的基本用法，以及有哪些参数，比如`lines`有两种用法，要么是`lines(x, ...)`，要么是`lines(x, y = NULL, type = "l", ...)`。

再往下是`Arguments`，这部分是**参数的细节**，这部分会详细告诉你，每个参数接受哪种类型等。比如`x, y`，这两个参数需要一个`vectors`，也就是一个向量，此时你必须提供一个向量，如果提供其他类型，必然报错！

再往下是一些需要注意的细节（Details）以及参考文献（References）等，最后是使用示例（Examples），这个示例可以直接运行，你也可以通过示例学习函数的用法。

如果现在的你还是无法理解帮助文档的内容，也不用着急，因为初学都是这样的，随着学习的深入，你会越来越得心应手。

很多初学者喜欢直接复制粘贴别人的代码，然后直接把数据换成自己的，绝大多数都会遇到报错，无法运行。主要原因就是不知道每个函数的具体要求，别人的代码是按照要求写的，自然可以运行，你的东西和别人不一样，不符合函数的要求，必然报错。
